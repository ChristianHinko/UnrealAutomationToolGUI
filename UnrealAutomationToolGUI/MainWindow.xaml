<Window Closing="OnApplicationEnd"
        x:Class="UnrealAutomationToolGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnrealAutomationToolGUI"
        mc:Ignorable="d"
        Title="Unreal Automation Tool GUI" Height="540" Width="960" Background="White"
        MouseLeftButtonDown="Window_MouseLeftButtonDown">
    <!-- WindowStyle="None"-->
    <Grid x:Name="Grid">
        <!--Rectangle HorizontalAlignment="Center" VerticalAlignment="Top" Fill="#FF494949" Width="800" Height="20"/-->
        <!--Image HorizontalAlignment="Left" Margin="750,0,0,0" VerticalAlignment="Top" Width="20" Height="20" Source="/X.png"/-->


        <Button x:Name="EngineDirectoryBtn" Content="Path to engine" HorizontalAlignment="Left" Margin="18,9,0,0" VerticalAlignment="Top" Click="EngineDirectoryBtn_Click"/>
        <TextBox x:Name="EngineDirectoryTextBox" HorizontalAlignment="Left" Margin="104,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="651" IsReadOnly="True" Background="Transparent" BorderThickness="0"/>
        <Button x:Name="UProjectPathBtn" Content="Path to uproject" HorizontalAlignment="Left" Margin="10,39,0,0" VerticalAlignment="Top" Click="UProjectPathBtn_Click"/>
        <TextBox x:Name="UProjectPathTextBox" HorizontalAlignment="Left" Margin="104,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="651" IsReadOnly="True" Background="Transparent" BorderThickness="0"/>
        <Label Content="Engine Type:" HorizontalAlignment="Left" Margin="23,68,0,0" VerticalAlignment="Top"/>
        <ComboBox x:Name="EngineTypeCombo" HorizontalAlignment="Left" Margin="104,70,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="EngineTypeCombo_SelectionChanged"
                  ItemsSource="{Binding Source={local:EnumBindingResource {x:Type local:EngineType}}}">
        </ComboBox>

        <Separator HorizontalAlignment="Left" Margin="0,99,0,0" VerticalAlignment="Top" Height="14" Width="866"/>
        <Label Content="Options" HorizontalAlignment="Left" Margin="871,93,0,0" VerticalAlignment="Top"/>

        <ComboBox x:Name="BuildConfigurationCombo" HorizontalAlignment="Left" Margin="773,346,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="BuildConfigurationCombo_SelectionChanged"
                  ItemsSource="{Binding Source={local:EnumBindingResource {x:Type local:BuildConfiguration}}}" SelectedIndex="4">
        </ComboBox>
        <CheckBox x:Name="PakCheckBox" Content="Pak" HorizontalAlignment="Left" Margin="746,157,0,0" VerticalAlignment="Top" Checked="PakCheckBox_Checked" Unchecked="PakCheckBox_Unchecked" IsChecked="True"/>

        <ComboBox x:Name="TargetPlatformCombo" HorizontalAlignment="Left" Margin="773,373,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="TargetPlatformCombo_SelectionChanged"
                  ItemsSource="{Binding Source={local:EnumBindingResource {x:Type local:TargetPlatform}}}" SelectedIndex="2" BorderBrush="#FFA62626">
            <!--Style = "{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"-->

        </ComboBox>
        <CheckBox x:Name="ServerCheckBox" Content="Server" HorizontalAlignment="Left" Margin="286,137,0,0" VerticalAlignment="Top" Checked="ServerCheckBox_Checked" Unchecked="ServerCheckBox_Unchecked" IsChecked="True"/>
        <CheckBox x:Name="NoClientCheckBox" Content="No client" HorizontalAlignment="Left" Margin="286,157,0,0" VerticalAlignment="Top" Checked="NoClientCheckBox_Checked" Unchecked="NoClientCheckBox_Unchecked"/>

        <CheckBox x:Name="StageCheckBox" Content="Stage" HorizontalAlignment="Left" Margin="118,195,0,0" VerticalAlignment="Top" Checked="StageCheckBox_Checked" Unchecked="StageCheckBox_Unchecked" IsChecked="True" FlowDirection="RightToLeft"/>
        <Button x:Name="StagingDirectoryBtn" Content="Staging Directory" HorizontalAlignment="Left" Margin="172,191,0,0" VerticalAlignment="Top" Height="26" Click="StagingDirectoryBtn_Click" PreviewMouseRightButtonDown="ResetStagingDirectory"/>
        <!--Style = "{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/-->
        <TextBox x:Name="StagingDirectoryTextBox" HorizontalAlignment="Left" Margin="274,189,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="592" IsReadOnly="True" Background="Transparent" BorderThickness="0" Text="Default" Height="30" VerticalContentAlignment="Center" PreviewMouseRightButtonDown="ResetStagingDirectory"/>

        <CheckBox x:Name="ArchiveCheckBox" Content="Archive" HorizontalAlignment="Left" Margin="108,228,0,0" VerticalAlignment="Top" Checked="ArchiveCheckBox_Checked" Unchecked="ArchiveCheckBox_Unchecked" FlowDirection="RightToLeft"/>
        <Button x:Name="ArchiveDirectoryBtn" Content="Archive Directory" HorizontalAlignment="Left" Margin="172,223,0,0" VerticalAlignment="Top" Height="26" Click="ArchiveDirectoryBtn_Click" PreviewMouseRightButtonDown="ResetArchiveDirectory" Width="96"/>
        <TextBox x:Name="ArchiveDirectoryTextBox" HorizontalAlignment="Left" Margin="274,221,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="592" IsReadOnly="True" Background="Transparent" BorderThickness="0" Text="Default" Height="30" VerticalContentAlignment="Center" PreviewMouseRightButtonDown="ResetArchiveDirectory"/>

        <Label Content="Create release version" HorizontalAlignment="Left" Margin="440,107,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="CreateReleaseVersionTextBox" HorizontalAlignment="Left" Margin="571,111,0,0" Text="" TextWrapping="Wrap" VerticalAlignment="Top" Width="62" TextChanged="CreateReleaseVersionTextBox_TextChanged">
            <TextBox.Style>
                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                    <Style.Resources>
                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                            <VisualBrush.Visual>
                                <Label Content="0.0.0" Foreground="DarkGray" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Label Content="Based on release version" HorizontalAlignment="Left" Margin="426,130,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="BasedOnReleaseVersionTextBox" HorizontalAlignment="Left" Margin="571,134,0,0" Text="" TextWrapping="Wrap" VerticalAlignment="Top" Width="62" TextChanged="BasedOnReleaseVersionTextBox_TextChanged">
            <TextBox.Style>
                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                    <Style.Resources>
                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                            <VisualBrush.Visual>
                                <Label Content="0.0.0" Foreground="DarkGray" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <CheckBox x:Name="GeneratePatchCheckBox" Content="Generate patch" HorizontalAlignment="Left" ToolTip="(sometimes takes a while on &quot;Executing 1 UnrealPak command&quot;)" Margin="485,157,0,0" VerticalAlignment="Top" Checked="GeneratePatchCheckBox_Checked" Unchecked="GeneratePatchCheckBox_Unchecked" FlowDirection="RightToLeft"/>

        <Label Content="Custom args" HorizontalAlignment="Left" Margin="10,263,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="CustomArgsTextBox" HorizontalAlignment="Left" Margin="83,268,0,0" Text="" TextWrapping="Wrap" VerticalAlignment="Top" Width="840" TextChanged="CustomArgsTextBox_TextChanged">
            <TextBox.Style>
                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                    <Style.Resources>
                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                            <VisualBrush.Visual>
                                <Label Content="-MyArg1 -MyArg2=&quot;MyValue&quot; -MyArg3" Foreground="DarkGray" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <Button x:Name="RunBtn" Content="Run" HorizontalAlignment="Left" Margin="773,291,0,0" VerticalAlignment="Top" Height="50" Width="150" Click="RunBtn_Click" FontSize="18"/>
        <Button x:Name="CancelBtn" Content="Cancel" HorizontalAlignment="Left" Margin="884,454,0,0" VerticalAlignment="Top" Click="CancelBtn_Click" Background="#FFEAB9B9"/>
        <CheckBox x:Name="BuildCheckBox" Content="Build" HorizontalAlignment="Left" Margin="10,112,0,0" VerticalAlignment="Top" Checked="BuildCheckBox_Checked" Unchecked="BuildCheckBox_Unchecked" IsChecked="True"/>
        <CheckBox x:Name="CookCheckBox" Content="Cook" HorizontalAlignment="Left" Margin="186,112,0,0" VerticalAlignment="Top" Checked="CookCheckBox_Checked" Unchecked="CookCheckBox_Unchecked" IsChecked="True"/>
        <CheckBox x:Name="PackageCheckBox" Content="Package" HorizontalAlignment="Left" Margin="10,190,0,0" VerticalAlignment="Top" Checked="PackageCheckBox_Checked" Unchecked="PackageCheckBox_Unchecked" IsChecked="True"/>

        <RichTextBox x:Name="OutputRichTextBox"  HorizontalAlignment="Left" Margin="10,291,0,0" VerticalAlignment="Top" Height="183" Width="758" IsReadOnly="True" VerticalContentAlignment="Bottom">
            <RichTextBox.Resources>
                <Style TargetType="{x:Type Paragraph}">
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="TextIndent" Value="-30"/>
                    <Setter Property="Margin" Value="30,0,0,0"/>
                </Style>
            </RichTextBox.Resources>
            <FlowDocument x:Name="OutputFlowDocument">

            </FlowDocument>
        </RichTextBox>
        <Label x:Name="MessageOnProcesses" Content="Closing application will end any started processes" HorizontalAlignment="Left" Margin="10,474,0,0" VerticalAlignment="Top" Foreground="Red"/>

        <TextBlock x:Name="SettingsTextBlock" HorizontalAlignment="Left" Margin="880,10,0,0" Text="Settings" TextWrapping="Wrap" VerticalAlignment="Top" Background="#19535353" MouseEnter="SettingsTextBlock_MouseEnter"/>
        <Rectangle x:Name="SettingsRect" HorizontalAlignment="Left" Height="205" Margin="498,26,0,0" Stroke="Black" VerticalAlignment="Top" Width="425" MouseEnter="SettingsTextBlock_MouseEnter" Visibility="Hidden">
            <Rectangle.Fill>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
            </Rectangle.Fill>
        </Rectangle>
        <Rectangle x:Name="SettingsMouseCoverage" HorizontalAlignment="Left" Height="241" Margin="485,0,0,0" VerticalAlignment="Top" Width="449" Visibility="Hidden" MouseLeave="SettingsTextBlock_MouseLeave" Fill="#00341F1F"/>
        <CheckBox x:Name="DarkThemeCheckBox" Content="Dark Theme" HorizontalAlignment="Left" Margin="505,206,0,0" VerticalAlignment="Top" Checked="DarkThemeCheckBox_Checked" Unchecked="DarkThemeCheckBox_Unchecked" MouseEnter="SettingsTextBlock_MouseEnter" Visibility="Hidden"/>
        <CheckBox x:Name="DarkOutputCheckBox" Content="Dark Output" HorizontalAlignment="Left" Margin="600,206,0,0" VerticalAlignment="Top" Checked="DarkOutputCheckBox_Checked" Unchecked="DarkOutputCheckBox_Unchecked" MouseEnter="SettingsTextBlock_MouseEnter" Visibility="Hidden"/>
        <Label x:Name="RightClickTip" Content="Tip: some params can be unset by right clicking them" HorizontalAlignment="Left" Margin="681,212,0,0" VerticalAlignment="Top" FontSize="10" MouseEnter="SettingsTextBlock_MouseEnter" Visibility="Hidden"/>
        <Separator HorizontalAlignment="Left" Margin="144,144,0,0" VerticalAlignment="Top" Width="70" RenderTransformOrigin="0.5,0.5">
            <Separator.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Separator.RenderTransform>
        </Separator>
        <Separator HorizontalAlignment="Left" Margin="0,176,0,0" VerticalAlignment="Top" Height="14" Width="922"/>
        <Separator HorizontalAlignment="Left" Margin="0,249,0,0" VerticalAlignment="Top" Height="14" Width="922"/>

    </Grid>
</Window>
